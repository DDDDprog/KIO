{
  "name": "KIO",
  "scopeName": "source.kio",
  "fileTypes": ["kio", "ko"],
  "patterns": [
    { "include": "#comments" },
    { "include": "#keywords" },
    { "include": "#strings" },
    { "include": "#numbers" },
    { "include": "#operators" },
    { "include": "#functions" },
    { "include": "#variables" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        { "name": "comment.line.double-slash.kio", "match": "//.*$" },
        { "name": "comment.block.kio", "begin": "/\\*", "end": "\\*/" }
      ]
    },
    "keywords": {
      "patterns": [
        { "name": "keyword.control.kio", "match": "\\b(if|else|while|for|break|continue|return|import|export|module|class|function|var|let|const|parallel|async|await)\\b" },
        { "name": "keyword.operator.kio", "match": "\\b(and|or|not|in|is|as)\\b" },
        { "name": "constant.language.kio", "match": "\\b(true|false|null|undefined)\\b" }
      ]
    },
    "strings": {
      "patterns": [
        { "name": "string.quoted.double.kio", "begin": "\"", "end": "\"", "patterns": [{ "name": "constant.character.escape.kio", "match": "\\\\." }] },
        { "name": "string.quoted.single.kio", "begin": "'", "end": "'", "patterns": [{ "name": "constant.character.escape.kio", "match": "\\\\." }] }
      ]
    },
    "numbers": {
      "patterns": [ { "name": "constant.numeric.kio", "match": "\\b\\d+(\\.\\d+)?([eE][+-]?\\d+)?\\b" } ]
    },
    "operators": {
      "patterns": [
        { "name": "keyword.operator.arithmetic.kio", "match": "[+\\-*/%]" },
        { "name": "keyword.operator.comparison.kio", "match": "(==|!=|<=|>=|<|>)" },
        { "name": "keyword.operator.assignment.kio", "match": "(=|\\+=|\\-=|\\*=|/=|%=)" }
      ]
    },
    "functions": {
      "patterns": [ { "name": "entity.name.function.kio", "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*(?=\\s*\\()" } ]
    },
    "variables": {
      "patterns": [ { "name": "variable.other.kio", "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b" } ]
    }
  }
}
